query businessProcesses($filter: BaseScalar = {}, $limit: Int = 1000) {
  navigatorBusinessProcesses(filter: $filter, limit: $limit) {
    collection {
      controls {
        ...businessProcessControl
      }
      controls {
        ...businessProcessControl
      }
      ...businessProcessForBPsRisks
      children {
        controls {
          ...businessProcessControl
        }
        ...businessProcessForBPsRisks

        children {
          controls {
            ...businessProcessControl
          }
          ...businessProcessForBPsRisks
          children {
            controls {
              ...businessProcessControl
            }
            ...businessProcessForBPsRisks
            children {
              controls {
                ...businessProcessControl
              }
              ...businessProcessForBPsRisks
              children {
                controls {
                  ...businessProcessControl
                }
                ...businessProcessForBPsRisks
              }
            }
          }
        }
      }
    }
  }
}
query adminBusinessProcessTree(
  $filter: BaseScalar = {}
  $isTree: Boolean = true
  $limit: Int
  $page: Int
) {
  preparerBusinessProcesses(filter: $filter, limit: $limit, page: $page) {
    collection {
      ...businessProcessBranch
      children @include(if: $isTree) {
        ...businessProcessBranch
        children {
          ...businessProcessBranch
          children {
            ...businessProcessBranch
            children {
              ...businessProcessBranch
              children {
                ...businessProcessBranch
              }
            }
          }
        }
      }
    }
    metadata {
      totalCount
      currentPage
      totalPages
      limitValue
    }
  }
}
query businessProcessTree(
  $filter: BaseScalar = {}
  $isTree: Boolean = true
  $limit: Int
  $page: Int
) {
  navigatorBusinessProcesses(filter: $filter, limit: $limit, page: $page) {
    collection {
      ...businessProcessBranch
      children @include(if: $isTree) {
        ...businessProcessBranch
        children {
          ...businessProcessBranch
          children {
            ...businessProcessBranch
            children {
              ...businessProcessBranch
              children {
                ...businessProcessBranch
              }
            }
          }
        }
      }
    }
    metadata {
      totalCount
      currentPage
      totalPages
      limitValue
    }
  }
}
# query bPChildren($id: ID!) {
#   businessProcess(id: $id) {
#     id
#     children {
#       ...businessProcessBranch
#       children {
#         ...businessProcessBranch
#         children {
#           ...businessProcessBranch
#           children {
#             ...businessProcessBranch
#             children {
#               ...businessProcessBranch
#             }
#           }
#         }
#       }
#     }
#   }
# }
query businessProcess($id: ID!) {
  businessProcess(id: $id) {
    ancestors {
      id
      name
    }
    ancestry
    id
    name
    parentId
    bookmarkedBy
    children {
      name
      id
      ancestry
      risks {
        draft {
          id
        }
        ...risk
        controls {
          ...businessProcessControl
        }
      }
      controls {
        ...businessProcessControl
      }
      resources {
        id
        name
        draft {
          id
        }
      }
      children {
        ...businessProcessBranch
        controls {
          ...businessProcessControl
        }
        resources {
          id
          name
          draft {
            id
          }
        }
        children {
          ...businessProcessBranch
          controls {
            ...businessProcessControl
          }
          resources {
            id
            name
            draft {
              id
            }
          }
          children {
            ...businessProcessBranch
            controls {
              ...businessProcessControl
            }
            resources {
              id
              name
              draft {
                id
              }
            }
            children {
              ...businessProcessBranch
              controls {
                ...businessProcessControl
              }
              resources {
                id
                name
                draft {
                  id
                }
              }
            }
          }
        }
      }
    }
    risks {
      draft {
        id
      }
      ...risk
      controls {
        ...businessProcessControl
      }
    }
    controls {
      draft {
        id
      }
      ...businessProcessControl
    }
    resources {
      name
      category
      id
      draft {
        id
      }
      rating
      visit
      resuploadUrl
      totalRating
      tags {
        xCoordinates
        yCoordinates
        businessProcess {
          id
          name
        }
        risk {
          id
          name
        }
      }
    }
  }
}

fragment businessProcessBranch on BusinessProcess {
  ancestry
  id
  name
  status
  parentId
  createdAt
  createdBy
  lastUpdatedBy
  updatedAt
  risks {
    id
    name
    draft {
      id
    }
  }
}
fragment businessProcessForBPsRisks on BusinessProcess {
  ancestry
  id
  name
  status
  parentId
  createdAt
  createdBy
  lastUpdatedBy
  updatedAt
  risks {
    draft {
      id
    }
    hasEditAccess
    ...risk
    controls {
      hasEditAccess
      ...businessProcessControl
    }
  }
}

fragment businessProcessControl on Control {
  id
  description
  nature
  ipo
  nature
  assertion
  frequency
  draft {
    id
  }
  typeOfControl
  controlOwner
  status
  keyControl
  businessProcesses {
    id
    name
  }
  risks {
    id
    name
  }
  activityControls {
    id
    activity
    guidance
  }
}

mutation createBusinessProcess($input: CreateBusinessProcessInput!) {
  createBusinessProcess(input: $input) {
    businessProcess {
      ancestry
      id
      name
    }
  }
}

mutation destroyBusinessProcess($input: DestroyBusinessProcessInput!) {
  destroyBusinessProcess(input: $input) {
    businessProcess {
      ancestry
      id
      name
    }
  }
}

mutation updateBusinessProcess($input: UpdateBusinessProcessInput!) {
  updateBusinessProcess(input: $input) {
    businessProcess {
      ancestry
      id
      name
    }
  }
}

mutation createSubBusinessProcess($input: CreateSubBusinessProcessInput!) {
  createSubBusinessProcess(input: $input) {
    businessProcess {
      ancestry
      id
      name
    }
  }
}

mutation createBookmarkBusinessProcess($id: ID!) {
  createBookmarkBusinessProcess(input: { businessProcessId: $id }) {
    success
  }
}
