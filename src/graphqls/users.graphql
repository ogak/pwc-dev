query users($filter: BaseScalar = {}, $page: Int, $limit: Int) {
  users(filter: $filter, page: $page, limit: $limit) {
    collection {
      ...userRowFragment
    }
    metadata {
      currentPage
      limitValue
      totalCount
      totalPages
    }
  }
}

fragment userRowFragment on User {
  id
  name
  roles { id name }
  policyCategories { id name }
}

query user($id: ID!) {
  user(id: $id) {
    ...userRowFragment
  }
}

mutation createUser($input: CreateUserInput!) {
  createUser(input: $input) {
    success
    errors
  }
}

mutation updateUser($input: UpdateUserInput!) {
  updateUser(input: $input) {
    success
    errors
  }
}

mutation adminUpdateUser($input: AdminUpdateUserInput!) {
  adminUpdateUser(input: $input) {
    success
    errors
  }
}

mutation destroyUser($id: ID){
  destroyUser(input: {id: $id}) {
    success
    errors
  }
}